{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\colibricode\\\\monkeysCloud\\\\frontend\\\\src\\\\pages\\\\manage\\\\index.js\";\nimport React, { memo, useCallback, useState } from 'react';\nimport { FaUserAlt } from 'react-icons/fa';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport Alert from 'react-s-alert';\nimport './style.scss';\nimport BreadCrumb from '../../components/breadcrumb';\nimport ProjectColumn from '../../components/projectcolumn';\nimport TaskCard from '../../components/taskcard';\nimport tasks from './tasks';\nconst userCollection = [{\n  id: 1,\n  value: 'Oscar Melendez'\n}, {\n  id: 2,\n  value: 'Eduardo Alvarez'\n}, {\n  id: 3,\n  value: 'Carlos Gutierrez'\n}, {\n  id: 4,\n  value: 'Alejandro Melendez'\n}];\nconst actions = ['Issues', 'Planning', 'Boards', 'Labels', 'Service Desk', 'Reports'];\n\nconst Project = () => {\n  const [columns, setColumns] = useState({\n    'To do': {\n      color: '#FF4900',\n      number: 76,\n      id: 1,\n      tasks: tasks.filter(i => i.state === 'To do')\n    },\n    Working: {\n      color: '#8798ad',\n      number: 69,\n      id: 2,\n      tasks: tasks.filter(i => i.state === 'Working')\n    },\n    Done: {\n      color: '#0070ff',\n      number: 28,\n      id: 3,\n      tasks: tasks.filter(i => i.state === 'Done')\n    }\n  });\n  const [selectedUser, setSelectedUser] = useState('');\n  const [mode, setMode] = useState('Issues');\n\n  const onDragEnd = ({\n    destination,\n    source\n  }) => {\n    if (!destination) return;\n\n    if (destination.index === source.index && destination.droppableId === source.droppableId) {\n      return;\n    } // Creating a copy of item before removing it from state\n\n\n    const itemCopy = { ...columns[source.droppableId].tasks[source.index]\n    };\n    itemCopy.state = destination.droppableId;\n    setColumns(prev => {\n      prev = { ...prev\n      }; // Remove from previous items array\n\n      prev[source.droppableId].tasks.splice(source.index, 1); // Adding to new items array location\n\n      prev[destination.droppableId].tasks.splice(destination.index, 0, itemCopy);\n      return prev;\n    });\n  };\n\n  const setVisible = useCallback(assignee => {\n    if (selectedUser) {\n      if (selectedUser === assignee) return true;else return false;\n    }\n\n    if (!selectedUser) return true;\n  }, [selectedUser]);\n\n  const gg = () => {\n    console.log('gg');\n    Alert.error('Test message 3', {\n      position: 'top-right',\n      effect: 'slide'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"manage-page monkeys-p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Alert, {\n    stack: {\n      limit: 3\n    },\n    html: true,\n    timeout: 5000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"monkeys-p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"project-type\",\n    onClick: gg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Public\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-enviroment-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"env-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"All Enviroment\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"env-button env-active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Dev Enviroment\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-filter-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, actions.map((action, i) => /*#__PURE__*/React.createElement(\"button\", {\n    key: i,\n    onClick: () => setMode(action),\n    className: `project-filter-button ${action === mode ? 'filter-active' : ''} `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, action))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-action-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-mode-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Issues\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, userCollection.map(({\n    id,\n    value\n  }, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(UserIcon, {\n    id: id,\n    value: value,\n    onClick: () => setSelectedUser(id),\n    style: selectedUser === id ? 'selected-user' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"li-clear pointer\",\n    onClick: () => setSelectedUser(''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"clear all\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-action-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \"Complete Sprint\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, \"Edit Boards\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ction-button-special\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, \"Share\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-tasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, Object.keys(columns).map((i, index) => /*#__PURE__*/React.createElement(ProjectColumn, Object.assign({\n    title: i\n  }, columns[i], {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), columns[i].tasks.map((task, i) => /*#__PURE__*/React.createElement(TaskCard, Object.assign({}, task, {\n    key: i,\n    index: i,\n    visible: setVisible(task.assignee),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }))))))));\n};\n\nconst UserIcon = ({\n  id,\n  value,\n  onClick,\n  style\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'icon-container ' + style,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: id,\n    type: \"checkbox\",\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FaUserAlt, {\n    className: \"user-icon-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default memo(Project);","map":{"version":3,"sources":["C:/Users/PC/Desktop/colibricode/monkeysCloud/frontend/src/pages/manage/index.js"],"names":["React","memo","useCallback","useState","FaUserAlt","DragDropContext","Alert","BreadCrumb","ProjectColumn","TaskCard","tasks","userCollection","id","value","actions","Project","columns","setColumns","color","number","filter","i","state","Working","Done","selectedUser","setSelectedUser","mode","setMode","onDragEnd","destination","source","index","droppableId","itemCopy","prev","splice","setVisible","assignee","gg","console","log","error","position","effect","limit","map","action","Object","keys","task","UserIcon","onClick","style"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useState } from 'react';\r\nimport { FaUserAlt } from 'react-icons/fa';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport Alert from 'react-s-alert';\r\n\r\nimport './style.scss';\r\nimport BreadCrumb from '../../components/breadcrumb';\r\nimport ProjectColumn from '../../components/projectcolumn';\r\nimport TaskCard from '../../components/taskcard';\r\nimport tasks from './tasks';\r\n\r\nconst userCollection = [\r\n  { id: 1, value: 'Oscar Melendez' },\r\n  { id: 2, value: 'Eduardo Alvarez' },\r\n  { id: 3, value: 'Carlos Gutierrez' },\r\n  { id: 4, value: 'Alejandro Melendez' },\r\n];\r\n\r\nconst actions = [\r\n  'Issues',\r\n  'Planning',\r\n  'Boards',\r\n  'Labels',\r\n  'Service Desk',\r\n  'Reports',\r\n];\r\n\r\nconst Project = () => {\r\n  const [columns, setColumns] = useState({\r\n    'To do': {\r\n      color: '#FF4900',\r\n      number: 76,\r\n      id: 1,\r\n      tasks: tasks.filter(i => i.state === 'To do'),\r\n    },\r\n    Working: {\r\n      color: '#8798ad',\r\n      number: 69,\r\n      id: 2,\r\n      tasks: tasks.filter(i => i.state === 'Working'),\r\n    },\r\n    Done: {\r\n      color: '#0070ff',\r\n      number: 28,\r\n      id: 3,\r\n      tasks: tasks.filter(i => i.state === 'Done'),\r\n    },\r\n  });\r\n  const [selectedUser, setSelectedUser] = useState('');\r\n  const [mode, setMode] = useState('Issues');\r\n\r\n  const onDragEnd = ({ destination, source }) => {\r\n    if (!destination) return;\r\n    if (\r\n      destination.index === source.index &&\r\n      destination.droppableId === source.droppableId\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // Creating a copy of item before removing it from state\r\n    const itemCopy = { ...columns[source.droppableId].tasks[source.index] };\r\n    itemCopy.state = destination.droppableId;\r\n    setColumns(prev => {\r\n      prev = { ...prev };\r\n      // Remove from previous items array\r\n      prev[source.droppableId].tasks.splice(source.index, 1);\r\n      // Adding to new items array location\r\n      prev[destination.droppableId].tasks.splice(\r\n        destination.index,\r\n        0,\r\n        itemCopy\r\n      );\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  const setVisible = useCallback(\r\n    assignee => {\r\n      if (selectedUser) {\r\n        if (selectedUser === assignee) return true;\r\n        else return false;\r\n      }\r\n      if (!selectedUser) return true;\r\n    },\r\n    [selectedUser]\r\n  );\r\n\r\n  const gg = () => {\r\n    console.log('gg');\r\n    Alert.error('Test message 3', {\r\n      position: 'top-right',\r\n      effect: 'slide',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='manage-page monkeys-p-5'>\r\n      <div className='project-header'>\r\n        <BreadCrumb />\r\n        <Alert stack={{ limit: 3 }} html timeout={5000} />\r\n        <div className='monkeys-p-1'>\r\n          <span className='project-type' onClick={gg}>\r\n            Public\r\n          </span>\r\n        </div>\r\n        <div className='project-enviroment-buttons'>\r\n          <button className='env-button'>All Enviroment</button>\r\n          <button className='env-button env-active'>Dev Enviroment</button>\r\n        </div>\r\n      </div>\r\n      <div className='project-filter-container'>\r\n        {actions.map((action, i) => (\r\n          <button\r\n            key={i}\r\n            onClick={() => setMode(action)}\r\n            className={`project-filter-button ${\r\n              action === mode ? 'filter-active' : ''\r\n            } `}\r\n          >\r\n            {action}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className='project-action-container'>\r\n        <div className='project-mode-name'>\r\n          <h3>Issues</h3>\r\n        </div>\r\n        {/*\r\n          ---------------------------user fields---------------------------------\r\n        */}\r\n        <div className='user-filter'>\r\n          <ul>\r\n            {userCollection.map(({ id, value }, i) => (\r\n              <li key={i}>\r\n                <UserIcon\r\n                  id={id}\r\n                  value={value}\r\n                  onClick={() => setSelectedUser(id)}\r\n                  style={selectedUser === id ? 'selected-user' : ''}\r\n                />\r\n              </li>\r\n            ))}\r\n            <li\r\n              className='li-clear pointer'\r\n              onClick={() => setSelectedUser('')}\r\n            >\r\n              clear all\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        {/*\r\n            ---------------------------end user fields--------------------------------\r\n        */}\r\n        <div className='project-action-buttons'>\r\n          <button>Complete Sprint</button>\r\n          <button>Edit Boards</button>\r\n          <button className='ction-button-special'>Share</button>\r\n        </div>\r\n      </div>\r\n      <div className='project-tasks'>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          {Object.keys(columns).map((i, index) => (\r\n            <ProjectColumn title={i} {...columns[i]} key={index}>\r\n              {columns[i].tasks.map((task, i) => (\r\n                <TaskCard\r\n                  {...task}\r\n                  key={i}\r\n                  index={i}\r\n                  visible={setVisible(task.assignee)}\r\n                />\r\n              ))}\r\n            </ProjectColumn>\r\n          ))}\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserIcon = ({ id, value, onClick, style }) => {\r\n  return (\r\n    <div className={'icon-container ' + style} onClick={onClick}>\r\n      <input id={id} type='checkbox' value={value} />\r\n      <FaUserAlt className='user-icon-center' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Project);\r\n"]},"metadata":{},"sourceType":"module"}