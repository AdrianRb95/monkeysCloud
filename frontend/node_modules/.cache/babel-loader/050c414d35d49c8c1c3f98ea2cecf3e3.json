{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\colibricode\\\\monkeysCloud\\\\frontend\\\\src\\\\pages\\\\userDetail\\\\EditableInput.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useFormikContext } from 'formik';\n\nconst EditableInput = ({\n  name\n}) => {\n  const [edit, setEdit] = useState(false);\n  const {\n    values,\n    handleChange\n  } = useFormikContext();\n  const ref = useRef(null);\n\n  const stopEditMode = e => e.keyCode === 27 && setEdit(false);\n\n  const handleClick = e => {\n    var _ref$current;\n\n    if ((_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.contains(e.target)) return console.log('dentro');\n    setEdit(false);\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editable-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, !edit ? /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"GG\") : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: 'red',\n      padding: 10\n    },\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: values[name],\n    onChange: handleChange,\n    onKeyDown: stopEditMode,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default EditableInput;","map":{"version":3,"sources":["C:/Users/PC/Desktop/colibricode/monkeysCloud/frontend/src/pages/userDetail/EditableInput.js"],"names":["React","useEffect","useRef","useState","useFormikContext","EditableInput","name","edit","setEdit","values","handleChange","ref","stopEditMode","e","keyCode","handleClick","current","contains","target","console","log","document","addEventListener","removeEventListener","background","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,gBAAT,QAAiC,QAAjC;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM;AAAEM,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA2BN,gBAAgB,EAAjD;AACA,QAAMO,GAAG,GAAGT,MAAM,CAAC,IAAD,CAAlB;;AACA,QAAMU,YAAY,GAAGC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAc,EAAd,IAAoBN,OAAO,CAAC,KAAD,CAArD;;AAEA,QAAMO,WAAW,GAAGF,CAAC,IAAI;AAAA;;AACvB,wBAAIF,GAAG,CAACK,OAAR,iDAAI,aAAaC,QAAb,CAAsBJ,CAAC,CAACK,MAAxB,CAAJ,EAAqC,OAAOC,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAP;AACrCZ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAHD;;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCP,WAAvC;AACA,WAAO,MAAM;AACXM,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CR,WAA1C;AACD,KAFD,CAFc,CAKd;AACD,GANQ,EAMN,EANM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACR,IAAD,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,gBAGC;AAAK,IAAA,KAAK,EAAE;AAAEiB,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,OAAO,EAAE;AAA9B,KAAZ;AAAgD,IAAA,GAAG,EAAEd,GAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAEF,MAAM,CAACH,IAAD,CADf;AAEE,IAAA,QAAQ,EAAEI,YAFZ;AAGE,IAAA,SAAS,EAAEE,YAHb;AAIE,IAAA,SAAS,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJJ,CADF;AAgBD,CAlCD;;AAoCA,eAAeP,aAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useFormikContext } from 'formik';\r\n\r\nconst EditableInput = ({ name }) => {\r\n  const [edit, setEdit] = useState(false);\r\n  const { values, handleChange } = useFormikContext();\r\n  const ref = useRef(null);\r\n  const stopEditMode = e => e.keyCode === 27 && setEdit(false);\r\n\r\n  const handleClick = e => {\r\n    if (ref.current?.contains(e.target)) return console.log('dentro');\r\n    setEdit(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClick);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <div className='editable-input'>\r\n      {!edit ? (\r\n        <h6>GG</h6>\r\n      ) : (\r\n        <div style={{ background: 'red', padding: 10 }} ref={ref}>\r\n          <input\r\n            value={values[name]}\r\n            onChange={handleChange}\r\n            onKeyDown={stopEditMode}\r\n            autoFocus\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditableInput;\r\n"]},"metadata":{},"sourceType":"module"}