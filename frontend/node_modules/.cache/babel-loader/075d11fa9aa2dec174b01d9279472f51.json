{"ast":null,"code":"import actions from './constants';\nimport axios from '../../api/axios';\nimport { UserDetailsStore } from './store';\nexport default function useActions() {\n  const [state, dispatch] = UserDetailsStore.useUserDetails();\n  const baseUrl = 'user';\n\n  const getData = async id => {\n    try {\n      const {\n        data\n      } = await axios.get(`${baseUrl}/read/${id}`);\n      dispatch({\n        type: actions.SET_USER,\n        payload: data.user\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updateUser = async values => {\n    delete values.id;\n    /*     try {\r\n      await axios.patch(`${baseUrl}/update/${values.id}`, values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } */\n  };\n\n  return {\n    getData,\n    state,\n    updateUser\n  };\n}","map":{"version":3,"sources":["C:/Users/PC/Desktop/colibricode/monkeysCloud/frontend/src/store/userDetails/actions.js"],"names":["actions","axios","UserDetailsStore","useActions","state","dispatch","useUserDetails","baseUrl","getData","id","data","get","type","SET_USER","payload","user","error","console","log","updateUser","values"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,aAApB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,gBAAT,QAAiC,SAAjC;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,gBAAgB,CAACI,cAAjB,EAA1B;AAEA,QAAMC,OAAO,GAAG,MAAhB;;AAEA,QAAMC,OAAO,GAAG,MAAMC,EAAN,IAAY;AAC1B,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAEJ,OAAQ,SAAQE,EAAG,EAAhC,CAAvB;AACAJ,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAEZ,OAAO,CAACa,QADP;AAEPC,QAAAA,OAAO,EAAEJ,IAAI,CAACK;AAFP,OAAD,CAAR;AAID,KAND,CAME,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAVD;;AAYA,QAAMG,UAAU,GAAG,MAAMC,MAAN,IAAgB;AACjC,WAAOA,MAAM,CAACX,EAAd;AACA;;;;;AAKD,GAPD;;AASA,SAAO;AACLD,IAAAA,OADK;AAELJ,IAAAA,KAFK;AAGLe,IAAAA;AAHK,GAAP;AAKD","sourcesContent":["import actions from './constants';\r\nimport axios from '../../api/axios';\r\nimport { UserDetailsStore } from './store';\r\n\r\nexport default function useActions() {\r\n  const [state, dispatch] = UserDetailsStore.useUserDetails();\r\n\r\n  const baseUrl = 'user';\r\n\r\n  const getData = async id => {\r\n    try {\r\n      const { data } = await axios.get(`${baseUrl}/read/${id}`);\r\n      dispatch({\r\n        type: actions.SET_USER,\r\n        payload: data.user,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const updateUser = async values => {\r\n    delete values.id;\r\n    /*     try {\r\n      await axios.patch(`${baseUrl}/update/${values.id}`, values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } */\r\n  };\r\n\r\n  return {\r\n    getData,\r\n    state,\r\n    updateUser,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}