{"ast":null,"code":"var _jsxFileName = \"/Users/yorch/development/Monkeys-frontend/src/store/task/store.js\";\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport actions from \"./constants\";\nconst defaultState = {\n  tasks: []\n};\n\nconst reducer = (state = defaultState, action = {}) => {\n  const {\n    type\n  } = action;\n\n  switch (type) {\n    case actions.SET_VAL:\n      return { ...state,\n        [action.payload.key]: action.payload.value\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nconst State = createContext(null);\nconst Dispatch = createContext(null);\nexport function Provider({\n  children\n}) {\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  return /*#__PURE__*/React.createElement(State.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dispatch.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, children));\n}\nexport const TaskStore = {\n  State,\n  Dispatch,\n  Provider,\n  useTask: () => [useContext(State), useContext(Dispatch)]\n};","map":{"version":3,"sources":["/Users/yorch/development/Monkeys-frontend/src/store/task/store.js"],"names":["React","createContext","useContext","useReducer","actions","defaultState","tasks","reducer","state","action","type","SET_VAL","payload","key","value","State","Dispatch","Provider","children","dispatch","TaskStore","useTask"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AAEA,OAAOC,OAAP,MAAoB,aAApB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAM,GAAG,EAAhC,KAAuC;AACrD,QAAM;AAAEC,IAAAA;AAAF,MAAWD,MAAjB;;AACA,UAAQC,IAAR;AACE,SAAKN,OAAO,CAACO,OAAb;AACE,aAAO,EACL,GAAGH,KADE;AAEL,SAACC,MAAM,CAACG,OAAP,CAAeC,GAAhB,GAAsBJ,MAAM,CAACG,OAAP,CAAeE;AAFhC,OAAP;;AAIF;AAAS;AACP,eAAON,KAAP;AACD;AARH;AAUD,CAZD;;AAcA,MAAMO,KAAK,GAAGd,aAAa,CAAC,IAAD,CAA3B;AACA,MAAMe,QAAQ,GAAGf,aAAa,CAAC,IAAD,CAA9B;AAEA,OAAO,SAASgB,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AACrC,QAAM,CAACV,KAAD,EAAQW,QAAR,IAAoBhB,UAAU,CAACI,OAAD,EAAUF,YAAV,CAApC;AAEA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEG,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD,CAAU,QAAV;AAAmB,IAAA,KAAK,EAAEW,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCD,QAArC,CADF,CADF;AAKD;AAED,OAAO,MAAME,SAAS,GAAG;AACvBL,EAAAA,KADuB;AAEvBC,EAAAA,QAFuB;AAGvBC,EAAAA,QAHuB;AAIvBI,EAAAA,OAAO,EAAE,MAAM,CAACnB,UAAU,CAACa,KAAD,CAAX,EAAoBb,UAAU,CAACc,QAAD,CAA9B;AAJQ,CAAlB","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\n\nimport actions from \"./constants\";\n\nconst defaultState = {\n  tasks: [],\n};\n\nconst reducer = (state = defaultState, action = {}) => {\n  const { type } = action;\n  switch (type) {\n    case actions.SET_VAL:\n      return {\n        ...state,\n        [action.payload.key]: action.payload.value,\n      };\n    default: {\n      return state;\n    }\n  }\n};\n\nconst State = createContext(null);\nconst Dispatch = createContext(null);\n\nexport function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, defaultState);\n\n  return (\n    <State.Provider value={state}>\n      <Dispatch.Provider value={dispatch}>{children}</Dispatch.Provider>\n    </State.Provider>\n  );\n}\n\nexport const TaskStore = {\n  State,\n  Dispatch,\n  Provider,\n  useTask: () => [useContext(State), useContext(Dispatch)],\n};\n"]},"metadata":{},"sourceType":"module"}