{"ast":null,"code":"var _jsxFileName = \"/Users/yorch/development/Monkeys-frontend/src/store/index.js\";\nimport React, { memo, cloneElement } from \"react\"; // Local\n\nimport { AuthStore } from \"./auth/store\";\nimport { SidebarStore } from \"./sidebar/store\";\nimport { OrganizationStore } from \"./organization/store\";\nimport { HistorialStore } from \"./historial/store\";\nimport { UserSettingsStore } from \"./userSettings/store\";\nimport { SettingsStore } from \"./settings/store\";\nimport { TaskStore } from \"./task/store\";\nimport { SprintStore } from \"./sprint/store\";\nconst providers = [/*#__PURE__*/React.createElement(AuthStore.Provider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(SidebarStore.Provider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(OrganizationStore.Provider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(HistorialStore.Provider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(UserSettingsStore.Provider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(SettingsStore.Provider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(TaskStore.Provider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(SprintStore.Provider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }\n})];\n\nconst Store = ({\n  children: initial\n}) => providers.reduce((children, parent) => cloneElement(parent, {\n  children\n}), initial);\n\nexport default memo(Store);","map":{"version":3,"sources":["/Users/yorch/development/Monkeys-frontend/src/store/index.js"],"names":["React","memo","cloneElement","AuthStore","SidebarStore","OrganizationStore","HistorialStore","UserSettingsStore","SettingsStore","TaskStore","SprintStore","providers","Store","children","initial","reduce","parent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,YAAtB,QAA0C,OAA1C,C,CAEA;;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,MAAMC,SAAS,GAAG,cAChB,oBAAC,SAAD,CAAW,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADgB,eAEhB,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFgB,eAGhB,oBAAC,iBAAD,CAAmB,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHgB,eAIhB,oBAAC,cAAD,CAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJgB,eAKhB,oBAAC,iBAAD,CAAmB,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALgB,eAMhB,oBAAC,aAAD,CAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANgB,eAOhB,oBAAC,SAAD,CAAW,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPgB,eAQhB,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARgB,CAAlB;;AAWA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAQ,EAAEC;AAAZ,CAAD,KACZH,SAAS,CAACI,MAAV,CACE,CAACF,QAAD,EAAWG,MAAX,KAAsBd,YAAY,CAACc,MAAD,EAAS;AAAEH,EAAAA;AAAF,CAAT,CADpC,EAEEC,OAFF,CADF;;AAMA,eAAeb,IAAI,CAACW,KAAD,CAAnB","sourcesContent":["import React, { memo, cloneElement } from \"react\";\n\n// Local\nimport { AuthStore } from \"./auth/store\";\nimport { SidebarStore } from \"./sidebar/store\";\nimport { OrganizationStore } from \"./organization/store\";\nimport { HistorialStore } from \"./historial/store\";\nimport { UserSettingsStore } from \"./userSettings/store\";\nimport { SettingsStore } from \"./settings/store\";\nimport { TaskStore } from \"./task/store\";\nimport { SprintStore } from \"./sprint/store\";\n\nconst providers = [\n  <AuthStore.Provider />,\n  <SidebarStore.Provider />,\n  <OrganizationStore.Provider />,\n  <HistorialStore.Provider />,\n  <UserSettingsStore.Provider />,\n  <SettingsStore.Provider />,\n  <TaskStore.Provider />,\n  <SprintStore.Provider />,\n];\n\nconst Store = ({ children: initial }) =>\n  providers.reduce(\n    (children, parent) => cloneElement(parent, { children }),\n    initial\n  );\n\nexport default memo(Store);\n"]},"metadata":{},"sourceType":"module"}