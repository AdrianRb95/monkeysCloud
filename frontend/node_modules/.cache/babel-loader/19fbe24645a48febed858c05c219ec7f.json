{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\colibricode\\\\monkeysCloud\\\\frontend\\\\src\\\\components\\\\enviromentSection\\\\index.js\";\nimport React, { useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport './style.scss';\nimport Cards from './cards.js';\nimport EnviromentCard from './enviromentCard.js';\nimport CreateEnviromentCard from './createCard.js';\n\nconst EnviromentSection = () => {\n  const [columns, setColumns] = useState({\n    DevelopmentURL: {\n      id: 1,\n      title: 'Development URL',\n      code: 'Code',\n      database: 'Database',\n      files: 'Files'\n    },\n    StageURL: {\n      id: 2,\n      title: 'Stage URL',\n      code: '',\n      database: '',\n      files: ''\n    },\n    ProductionURL: {\n      id: 3,\n      title: 'Production URL',\n      code: '',\n      database: '',\n      files: ''\n    }\n  });\n\n  const onDragEnd = ({\n    destination,\n    source\n  }) => {\n    //Next three lines avoid dropping the item in undroppable areas to avoid errors  \n    if (!destination) return;\n\n    if (destination.index === source.index && destination.droppableId === source.droppableId) {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"action-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"settings\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"action-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"wiki\"), /*#__PURE__*/React.createElement(\"a\", {\n    id: \"clone\",\n    href: \"#\",\n    className: \"action-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"clone\"))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, Object.keys(columns).map((column, index) => /*#__PURE__*/React.createElement(EnviromentCard, Object.assign({}, columns[column], {\n    index: index,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(CreateEnviromentCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default EnviromentSection;","map":{"version":3,"sources":["C:/Users/PC/Desktop/colibricode/monkeysCloud/frontend/src/components/enviromentSection/index.js"],"names":["React","useState","DragDropContext","Cards","EnviromentCard","CreateEnviromentCard","EnviromentSection","columns","setColumns","DevelopmentURL","id","title","code","database","files","StageURL","ProductionURL","onDragEnd","destination","source","index","droppableId","Object","keys","map","column"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\n\r\nimport './style.scss';\r\nimport Cards from './cards.js';\r\nimport EnviromentCard from './enviromentCard.js';\r\nimport CreateEnviromentCard from './createCard.js';\r\n\r\nconst EnviromentSection = () =>{\r\n    const [columns, setColumns] = useState({\r\n        DevelopmentURL:{\r\n            id: 1,\r\n            title:'Development URL',\r\n            code: 'Code',\r\n            database: 'Database',\r\n            files: 'Files'\r\n        },\r\n        StageURL:{\r\n            id: 2,\r\n            title:'Stage URL',\r\n            code: '',\r\n            database: '',\r\n            files: ''\r\n        },\r\n        ProductionURL:{\r\n            id: 3,\r\n            title:'Production URL',\r\n            code: '',\r\n            database: '',\r\n            files: ''\r\n        }   \r\n    });        \r\n    const onDragEnd = ({destination, source})=>{\r\n        //Next three lines avoid dropping the item in undroppable areas to avoid errors  \r\n        if (!destination) return;\r\n        if ( destination.index === source.index && destination.droppableId === source.droppableId) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"main-container\">\r\n            <div className=\"header-container\">\r\n                <div className=\"actions-header\">\r\n                    <a href=\"#\" className=\"action-button\">settings</a>\r\n                    <a href=\"#\" className=\"action-button\">wiki</a>\r\n                    <a id=\"clone\" href=\"#\" className=\"action-button\">clone</a>\r\n                </div>\r\n            </div>            \r\n            <section className=\"section-container\">  \r\n                <DragDropContext onDragEnd={onDragEnd}>\r\n                    <div className=\"cards-section\">                    \r\n                        { Object.keys(columns).map((column, index) => (\r\n                            <EnviromentCard                                                                \r\n                                {...columns[column]}                                \r\n                                index={index}\r\n                                key={index}                                                                \r\n                                />)\r\n                        )}        \r\n                        <CreateEnviromentCard/>                            \r\n                    </div>\r\n                </DragDropContext>\r\n            </section>        \r\n        </div>\r\n    );\r\n}\r\nexport default EnviromentSection;"]},"metadata":{},"sourceType":"module"}