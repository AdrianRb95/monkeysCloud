{"ast":null,"code":"var _jsxFileName = \"/Users/yorch/development/monkeysCloud/frontend/src/components/form/appInput/index.js\";\nimport React from 'react';\nimport { useFormikContext } from 'formik';\nimport ErrorMessage from '../errorMessage';\nimport './style.scss';\n\nconst AppInput = ({\n  label,\n  type = 'text',\n  name\n}) => {\n  const {\n    values,\n    handleChange,\n    errors,\n    touched\n  } = useFormikContext();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, label), /*#__PURE__*/React.createElement(\"input\", {\n    value: values[name],\n    name: name,\n    type: type,\n    onChange: handleChange,\n    className: errors[name] && touched[name] && 'danger',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }), errors[name] && touched[name] && /*#__PURE__*/React.createElement(ErrorMessage, {\n    message: errors[name],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 41\n    }\n  }));\n};\n\nexport default AppInput;","map":{"version":3,"sources":["/Users/yorch/development/monkeysCloud/frontend/src/components/form/appInput/index.js"],"names":["React","useFormikContext","ErrorMessage","AppInput","label","type","name","values","handleChange","errors","touched"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAO,cAAP;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAI,GAAG,MAAhB;AAAwBC,EAAAA;AAAxB,CAAD,KAAoC;AACnD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,MAAxB;AAAgCC,IAAAA;AAAhC,MAA4CT,gBAAgB,EAAlE;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQG,KAAR,CADF,eAEE;AACE,IAAA,KAAK,EAAEG,MAAM,CAACD,IAAD,CADf;AAEE,IAAA,IAAI,EAAEA,IAFR;AAGE,IAAA,IAAI,EAAED,IAHR;AAIE,IAAA,QAAQ,EAAEG,YAJZ;AAKE,IAAA,SAAS,EAAEC,MAAM,CAACH,IAAD,CAAN,IAAgBI,OAAO,CAACJ,IAAD,CAAvB,IAAiC,QAL9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASGG,MAAM,CAACH,IAAD,CAAN,IAAgBI,OAAO,CAACJ,IAAD,CAAvB,iBAAiC,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEG,MAAM,CAACH,IAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATpC,CADF;AAaD,CAfD;;AAiBA,eAAeH,QAAf","sourcesContent":["import React from 'react';\nimport { useFormikContext } from 'formik';\n\nimport ErrorMessage from '../errorMessage';\nimport './style.scss';\n\nconst AppInput = ({ label, type = 'text', name }) => {\n  const { values, handleChange, errors, touched } = useFormikContext();\n  return (\n    <div className='form-group'>\n      <label>{label}</label>\n      <input\n        value={values[name]}\n        name={name}\n        type={type}\n        onChange={handleChange}\n        className={errors[name] && touched[name] && 'danger'}\n      />\n      {errors[name] && touched[name] && <ErrorMessage message={errors[name]} />}\n    </div>\n  );\n};\n\nexport default AppInput;\n"]},"metadata":{},"sourceType":"module"}