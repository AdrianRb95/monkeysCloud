{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\colibricode\\\\monkeysCloud\\\\frontend\\\\src\\\\components\\\\form\\\\editableInput\\\\index.js\";\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport { useFormikContext } from 'formik';\nimport './style.scss';\n\nconst EditableInput = ({\n  name,\n  label\n}) => {\n  const {\n    values,\n    handleChange\n  } = useFormikContext();\n  const [edit, setEdit] = useState(false);\n  const ref = useRef(null);\n\n  const stopEditMode = ({\n    keyCode\n  }) => {\n    if (keyCode === 27 || keyCode === 13) setEdit(false);\n  };\n\n  const handleClick = e => {\n    var _ref$current;\n\n    if ((_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.contains(e.target)) return console.log('dentro');\n    setEdit(false);\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editable-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, label || name), !edit ? /*#__PURE__*/React.createElement(\"h5\", {\n    onClick: () => setEdit(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, values[name] || `Your ${label}`) : /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    value: values[name],\n    onChange: handleChange,\n    onKeyDown: stopEditMode,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default memo(EditableInput);","map":{"version":3,"sources":["C:/Users/PC/Desktop/colibricode/monkeysCloud/frontend/src/components/form/editableInput/index.js"],"names":["React","memo","useEffect","useRef","useState","useFormikContext","EditableInput","name","label","values","handleChange","edit","setEdit","ref","stopEditMode","keyCode","handleClick","e","current","contains","target","console","log","document","addEventListener","removeEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,MAAjC,EAAyCC,QAAzC,QAAyD,OAAzD;AACA,SAASC,gBAAT,QAAiC,QAAjC;AAEA,OAAO,cAAP;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AACzC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA2BL,gBAAgB,EAAjD;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMS,GAAG,GAAGV,MAAM,CAAC,IAAD,CAAlB;;AACA,QAAMW,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiB;AACpC,QAAIA,OAAO,KAAK,EAAZ,IAAkBA,OAAO,KAAK,EAAlC,EAAsCH,OAAO,CAAC,KAAD,CAAP;AACvC,GAFD;;AAIA,QAAMI,WAAW,GAAGC,CAAC,IAAI;AAAA;;AACvB,wBAAIJ,GAAG,CAACK,OAAR,iDAAI,aAAaC,QAAb,CAAsBF,CAAC,CAACG,MAAxB,CAAJ,EAAqC,OAAOC,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAP;AACrCV,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAHD;;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCR,WAAvC;AACA,WAAO,MAAM;AACXO,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CT,WAA1C;AACD,KAFD,CAFc,CAKd;AACD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,KAAK,IAAID,IAAd,CADF,EAEG,CAACI,IAAD,gBACC;AAAI,IAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,IAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCH,MAAM,CAACF,IAAD,CAAN,IAAiB,QAAOC,KAAM,EAAjE,CADD,gBAGC;AACE,IAAA,IAAI,EAAED,IADR;AAEE,IAAA,KAAK,EAAEE,MAAM,CAACF,IAAD,CAFf;AAGE,IAAA,QAAQ,EAAEG,YAHZ;AAIE,IAAA,SAAS,EAAEI,YAJb;AAKE,IAAA,SAAS,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADF;AAgBD,CArCD;;AAuCA,eAAeb,IAAI,CAACK,aAAD,CAAnB","sourcesContent":["import React, { memo, useEffect, useRef, useState } from 'react';\r\nimport { useFormikContext } from 'formik';\r\n\r\nimport './style.scss';\r\n\r\nconst EditableInput = ({ name, label }) => {\r\n  const { values, handleChange } = useFormikContext();\r\n  const [edit, setEdit] = useState(false);\r\n  const ref = useRef(null);\r\n  const stopEditMode = ({ keyCode }) => {\r\n    if (keyCode === 27 || keyCode === 13) setEdit(false);\r\n  };\r\n\r\n  const handleClick = e => {\r\n    if (ref.current?.contains(e.target)) return console.log('dentro');\r\n    setEdit(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClick);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className='editable-input'>\r\n      <h6>{label || name}</h6>\r\n      {!edit ? (\r\n        <h5 onClick={() => setEdit(true)}>{values[name] || `Your ${label}`}</h5>\r\n      ) : (\r\n        <input\r\n          name={name}\r\n          value={values[name]}\r\n          onChange={handleChange}\r\n          onKeyDown={stopEditMode}\r\n          autoFocus\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(EditableInput);\r\n"]},"metadata":{},"sourceType":"module"}