{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\colibricode\\\\monkeysCloud\\\\frontend\\\\src\\\\components\\\\taskcard\\\\index.js\";\n// Third libs\nimport React, { memo, useCallback } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { useHistory } from 'react-router-dom';\nimport { FaCheckSquare, FaCommentAlt } from 'react-icons/fa';\nimport { HiArrowUp, HiArrowDown } from 'react-icons/hi'; // Local\n\nimport './style.scss';\nconst priorityColors = {\n  1: '#23CC55',\n  2: '#085820',\n  3: '#E5762A',\n  4: '#F7141C'\n};\nconst borderColor = {\n  'To do': '#FF4900',\n  Working: '#8798ad',\n  Done: '#0070ff'\n};\n\nconst TaskCard = ({\n  id,\n  name,\n  state,\n  index,\n  visible,\n  priority,\n  type\n}) => {\n  //Agregar parametro state que servira para saber a que columna pertenece\n  const history = useHistory();\n\n  const getStyle = dragStyle => ({\n    display: !visible ? 'none' : '',\n    borderLeftColor: borderColor[state],\n    ...dragStyle\n  });\n\n  let PriorityComponent;\n  if (priority > 2) PriorityComponent = HiArrowUp;else PriorityComponent = HiArrowDown;\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: name,\n    key: name,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"task-card pointer\",\n    onClick: () => history.push(`/task-detail/${id}`),\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    style: getStyle(provided.draggableProps.style),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-card-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Issue Name\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, state)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-card-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, type === 'task' ? /*#__PURE__*/React.createElement(FaCheckSquare, {\n    color: \"#20A2DA\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(FaCommentAlt, {\n    color: \"#8BC34A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(PriorityComponent, {\n    color: priorityColors[priority],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-card-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"MC-\", id)))));\n};\n\nexport default memo(TaskCard);","map":{"version":3,"sources":["C:/Users/PC/Desktop/colibricode/monkeysCloud/frontend/src/components/taskcard/index.js"],"names":["React","memo","useCallback","Draggable","useHistory","FaCheckSquare","FaCommentAlt","HiArrowUp","HiArrowDown","priorityColors","borderColor","Working","Done","TaskCard","id","name","state","index","visible","priority","type","history","getStyle","dragStyle","display","borderLeftColor","PriorityComponent","provided","push","innerRef","draggableProps","dragHandleProps","style"],"mappings":"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","sourcesContent":["// Third libs\r\nimport React, { memo, useCallback } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FaCheckSquare, FaCommentAlt } from 'react-icons/fa';\r\nimport { HiArrowUp, HiArrowDown } from 'react-icons/hi';\r\n// Local\r\nimport './style.scss';\r\n\r\nconst priorityColors = {\r\n  1: '#23CC55',\r\n  2: '#085820',\r\n  3: '#E5762A',\r\n  4: '#F7141C',\r\n};\r\n\r\nconst borderColor = {\r\n  'To do': '#FF4900',\r\n  Working: '#8798ad',\r\n  Done: '#0070ff',\r\n};\r\n\r\nconst TaskCard = ({ id, name, state, index, visible, priority, type }) => {\r\n  //Agregar parametro state que servira para saber a que columna pertenece\r\n  const history = useHistory();\r\n  const getStyle = dragStyle => ({\r\n    display: !visible ? 'none' : '',\r\n    borderLeftColor: borderColor[state],\r\n    ...dragStyle,\r\n  });\r\n\r\n  let PriorityComponent;\r\n  if (priority > 2) PriorityComponent = HiArrowUp;\r\n  else PriorityComponent = HiArrowDown;\r\n\r\n  return (\r\n    <Draggable draggableId={name} key={name} index={index}>\r\n      {provided => (\r\n        <div\r\n          className='task-card pointer'\r\n          onClick={() => history.push(`/task-detail/${id}`)}\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          style={getStyle(provided.draggableProps.style)}\r\n        >\r\n          <div className='task-card-top'>\r\n            <h4>Issue Name</h4>\r\n            <h4>{state}</h4>\r\n          </div>\r\n          <div className='task-card-bottom'>\r\n            <p>\r\n              {type === 'task' ? (\r\n                <FaCheckSquare color='#20A2DA' />\r\n              ) : (\r\n                <FaCommentAlt color='#8BC34A' />\r\n              )}\r\n              <PriorityComponent color={priorityColors[priority]} />\r\n            </p>\r\n            <div className='task-card-user'>\r\n              <p></p>\r\n              <h6>MC-{id}</h6>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\nexport default memo(TaskCard);\r\n"]},"metadata":{},"sourceType":"module"}