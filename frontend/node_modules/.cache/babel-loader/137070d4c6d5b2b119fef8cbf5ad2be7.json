{"ast":null,"code":"import { TaskStore } from \"./store\";\nimport actions from \"./constants\";\nexport default function useActions() {\n  const [state, dispatch] = TaskStore.useTask();\n\n  async function loadTasks() {\n    try {\n      dispatch({\n        type: actions.SET_VAL,\n        payload: {\n          key: \"tasks\",\n          value: []\n        }\n      });\n      dispatch({\n        type: actions.SET_VAL,\n        payload: {\n          key: \"loadTasksStatus\",\n          value: \"loading\"\n        }\n      }); //   API CALL\n\n      setTimeout(() => {\n        dispatch({\n          type: actions.SET_VAL,\n          payload: {\n            key: \"tasks\",\n            value: [{\n              id: 1,\n              name: \"Tag\",\n              date: \"MM/DD/YY\"\n            }, {\n              id: 2,\n              name: \"Tag\",\n              date: \"MM/DD/YY\"\n            }, {\n              id: 3,\n              name: \"Tag\",\n              date: \"MM/DD/YY\"\n            }]\n          }\n        });\n        dispatch({\n          type: actions.SET_VAL,\n          payload: {\n            key: \"loadTasksStatus\",\n            value: \"success\"\n          }\n        });\n      }, 500);\n    } catch (err) {\n      // Showing error and rolling back\n      console.error(err, \"loadTasks\");\n      dispatch({\n        type: actions.SET_VAL,\n        payload: {\n          key: \"tasks\",\n          value: []\n        }\n      });\n      dispatch({\n        type: actions.SET_VAL,\n        payload: {\n          key: \"loadTasksStatus\",\n          value: \"error\"\n        }\n      });\n    }\n  }\n\n  return {\n    state,\n    dispatch,\n    loadTasks\n  };\n}","map":{"version":3,"sources":["/Users/yorch/development/Monkeys-frontend/src/store/task/actions.js"],"names":["TaskStore","actions","useActions","state","dispatch","useTask","loadTasks","type","SET_VAL","payload","key","value","setTimeout","id","name","date","err","console","error"],"mappings":"AAAA,SAASA,SAAT,QAA0B,SAA1B;AAEA,OAAOC,OAAP,MAAoB,aAApB;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,SAAS,CAACK,OAAV,EAA1B;;AAEA,iBAAeC,SAAf,GAA2B;AACzB,QAAI;AACFF,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEN,OAAO,CAACO,OADP;AAEPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,GAAG,EAAE,OADE;AAEPC,UAAAA,KAAK,EAAE;AAFA;AAFF,OAAD,CAAR;AAOAP,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEN,OAAO,CAACO,OADP;AAEPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,GAAG,EAAE,iBADE;AAEPC,UAAAA,KAAK,EAAE;AAFA;AAFF,OAAD,CAAR,CARE,CAgBF;;AACAC,MAAAA,UAAU,CAAC,MAAM;AACfR,QAAAA,QAAQ,CAAC;AACPG,UAAAA,IAAI,EAAEN,OAAO,CAACO,OADP;AAEPC,UAAAA,OAAO,EAAE;AACPC,YAAAA,GAAG,EAAE,OADE;AAEPC,YAAAA,KAAK,EAAE,CACL;AAAEE,cAAAA,EAAE,EAAE,CAAN;AAASC,cAAAA,IAAI,EAAE,KAAf;AAAsBC,cAAAA,IAAI,EAAE;AAA5B,aADK,EAEL;AAAEF,cAAAA,EAAE,EAAE,CAAN;AAASC,cAAAA,IAAI,EAAE,KAAf;AAAsBC,cAAAA,IAAI,EAAE;AAA5B,aAFK,EAGL;AAAEF,cAAAA,EAAE,EAAE,CAAN;AAASC,cAAAA,IAAI,EAAE,KAAf;AAAsBC,cAAAA,IAAI,EAAE;AAA5B,aAHK;AAFA;AAFF,SAAD,CAAR;AAWAX,QAAAA,QAAQ,CAAC;AACPG,UAAAA,IAAI,EAAEN,OAAO,CAACO,OADP;AAEPC,UAAAA,OAAO,EAAE;AACPC,YAAAA,GAAG,EAAE,iBADE;AAEPC,YAAAA,KAAK,EAAE;AAFA;AAFF,SAAD,CAAR;AAOD,OAnBS,EAmBP,GAnBO,CAAV;AAoBD,KArCD,CAqCE,OAAOK,GAAP,EAAY;AACZ;AACAC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd,EAAmB,WAAnB;AACAZ,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEN,OAAO,CAACO,OADP;AAEPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,GAAG,EAAE,OADE;AAEPC,UAAAA,KAAK,EAAE;AAFA;AAFF,OAAD,CAAR;AAOAP,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEN,OAAO,CAACO,OADP;AAEPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,GAAG,EAAE,iBADE;AAEPC,UAAAA,KAAK,EAAE;AAFA;AAFF,OAAD,CAAR;AAOD;AACF;;AAED,SAAO;AACLR,IAAAA,KADK;AAELC,IAAAA,QAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD","sourcesContent":["import { TaskStore } from \"./store\";\n\nimport actions from \"./constants\";\n\nexport default function useActions() {\n  const [state, dispatch] = TaskStore.useTask();\n\n  async function loadTasks() {\n    try {\n      dispatch({\n        type: actions.SET_VAL,\n        payload: {\n          key: \"tasks\",\n          value: [],\n        },\n      });\n      dispatch({\n        type: actions.SET_VAL,\n        payload: {\n          key: \"loadTasksStatus\",\n          value: \"loading\",\n        },\n      });\n\n      //   API CALL\n      setTimeout(() => {\n        dispatch({\n          type: actions.SET_VAL,\n          payload: {\n            key: \"tasks\",\n            value: [\n              { id: 1, name: \"Tag\", date: \"MM/DD/YY\" },\n              { id: 2, name: \"Tag\", date: \"MM/DD/YY\" },\n              { id: 3, name: \"Tag\", date: \"MM/DD/YY\" },\n            ],\n          },\n        });\n        dispatch({\n          type: actions.SET_VAL,\n          payload: {\n            key: \"loadTasksStatus\",\n            value: \"success\",\n          },\n        });\n      }, 500);\n    } catch (err) {\n      // Showing error and rolling back\n      console.error(err, \"loadTasks\");\n      dispatch({\n        type: actions.SET_VAL,\n        payload: {\n          key: \"tasks\",\n          value: [],\n        },\n      });\n      dispatch({\n        type: actions.SET_VAL,\n        payload: {\n          key: \"loadTasksStatus\",\n          value: \"error\",\n        },\n      });\n    }\n  }\n\n  return {\n    state,\n    dispatch,\n    loadTasks,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}