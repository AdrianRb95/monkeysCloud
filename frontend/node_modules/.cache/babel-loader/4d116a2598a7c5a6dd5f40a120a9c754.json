{"ast":null,"code":"var _jsxFileName = \"/Users/yorch/development/Monkeys-frontend/src/components/projectcolumn/index.js\";\nimport React, { useState } from \"react\";\nimport { FaCaretDown } from \"react-icons/fa\";\nimport \"./style.scss\";\nimport TaskCard from \"../taskcard\";\n\nconst ColumnHeader = ({\n  title,\n  color,\n  number\n}) => {\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-column-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, title, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge-counter\",\n    style: {\n      color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, number)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"accordion-icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaCaretDown, {\n    className: \"accordion-icon\",\n    onClick: () => setShow(!show),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst ProjectColumn = ({\n  title,\n  color,\n  number,\n  id,\n  tasks = []\n}) => {\n  const [show, setShow] = useState(false);\n  const [list, setList] = React.useState(tasks);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    className: \"project-column\",\n    onDragOver: e => {\n      e.preventDefault();\n    },\n    onDrop: e => {\n      let id = JSON.parse(e.dataTransfer.getData(\"id\"));\n      console.log(\"dragged id: \", id);\n      let columnTitle = title;\n      const test = list.filter(task => {\n        if (task.id == id) {\n          console.log(\"current state: \", task.state);\n          task.state = columnTitle;\n          console.log(\"new state: \", task.state);\n        }\n\n        return task;\n      });\n      setList(test);\n      console.log(\"test array: \", test);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-column-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, title, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"badge-counter\",\n    style: {\n      color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, number)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"accordion-icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FaCaretDown, {\n    className: \"accordion-icon\",\n    onClick: () => setShow(!show),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `project-tasks-container ${show ? \"show-tasks\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, list.filter(task => task.state == title).map((filteredTask, i) => /*#__PURE__*/React.createElement(\"div\", {\n    onDragStart: e => {\n      console.log(\"Filtered task id: \", filteredTask.id);\n      e.dataTransfer.setData(\"id\", JSON.stringify(filteredTask.id));\n    },\n    draggable: true,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TaskCard, {\n    task: filteredTask,\n    key: i,\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default ProjectColumn;","map":{"version":3,"sources":["/Users/yorch/development/Monkeys-frontend/src/components/projectcolumn/index.js"],"names":["React","useState","FaCaretDown","TaskCard","ColumnHeader","title","color","number","show","setShow","ProjectColumn","id","tasks","list","setList","e","preventDefault","JSON","parse","dataTransfer","getData","console","log","columnTitle","test","filter","task","state","map","filteredTask","i","setData","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { FaCaretDown } from \"react-icons/fa\";\nimport \"./style.scss\";\nimport TaskCard from \"../taskcard\";\nconst ColumnHeader = ({ title, color, number }) => {\n  const [show, setShow] = useState(false);\n  return (\n    <div className=\"project-column-header\">\n      <h5 className=\"title\">\n        {title}\n        <span className=\"badge-counter\" style={{ color }}>\n          {number}\n        </span>\n      </h5>\n      <div className=\"accordion-icon-container\">\n        <FaCaretDown\n          className=\"accordion-icon\"\n          onClick={() => setShow(!show)}\n        />\n      </div>\n    </div>\n  );\n};\nconst ProjectColumn = ({ title, color, number, id, tasks = [] }) => {\n  const [show, setShow] = useState(false);\n  const [list, setList] = React.useState(tasks);\n  return (\n    <div\n      id={id}\n      className=\"project-column\"\n      onDragOver={(e) => {\n        e.preventDefault();\n      }}\n      onDrop={(e) => {\n        let id = JSON.parse(e.dataTransfer.getData(\"id\"));\n        console.log(\"dragged id: \", id);\n        let columnTitle = title;\n        const test = list.filter((task) => {\n          if (task.id == id) {\n            console.log(\"current state: \", task.state);\n            task.state = columnTitle;\n            console.log(\"new state: \", task.state);\n          }\n          return task;\n        });\n        setList(test);\n        console.log(\"test array: \", test);\n      }}\n    >\n      <div className=\"project-column-header\">\n        <h5 className=\"title\">\n          {title}\n          <span className=\"badge-counter\" style={{ color }}>\n            {number}\n          </span>\n        </h5>\n        <div className=\"accordion-icon-container\">\n          <FaCaretDown\n            className=\"accordion-icon\"\n            onClick={() => setShow(!show)}\n          />\n        </div>\n      </div>\n      <div className={`project-tasks-container ${show ? \"show-tasks\" : \"\"}`}>\n        {list\n          .filter((task) => task.state == title)\n          .map((filteredTask, i) => (\n            <div\n              onDragStart={(e) => {\n                console.log(\"Filtered task id: \", filteredTask.id);\n                e.dataTransfer.setData(\"id\", JSON.stringify(filteredTask.id));\n              }}\n              draggable\n              key={i}\n            >\n              <TaskCard task={filteredTask} key={i} color={color} />\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\nexport default ProjectColumn;\n"]},"metadata":{},"sourceType":"module"}