{"ast":null,"code":"var _jsxFileName = \"/Users/yorch/development/monkeysCloud/frontend/src/pages/manage/index.js\";\nimport React, { memo, useCallback, useState } from 'react';\nimport { FaUserAlt } from 'react-icons/fa';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport './style.scss';\nimport BreadCrumb from '../../components/breadcrumb';\nimport ProjectColumn from '../../components/projectcolumn';\nimport TaskCard from '../../components/taskcard';\nimport tasks from './tasks';\nconst userCollection = [{\n  id: 1,\n  value: 'Oscar Melendez'\n}, {\n  id: 2,\n  value: 'Eduardo Alvarez'\n}, {\n  id: 3,\n  value: 'Carlos Gutierrez'\n}, {\n  id: 4,\n  value: 'Alejandro Melendez'\n}];\nconst actions = ['Issues', 'Planning', 'Boards', 'Labels', 'Service Desk', 'Reports'];\n\nconst Project = () => {\n  const [columns, setColumns] = useState({\n    'To do': {\n      color: '#FF4900',\n      number: 76,\n      id: 1,\n      tasks: tasks.filter(i => i.state === 'To do')\n    },\n    Working: {\n      color: '#8798ad',\n      number: 69,\n      id: 2,\n      tasks: tasks.filter(i => i.state === 'Working')\n    },\n    Done: {\n      color: '#0070ff',\n      number: 28,\n      id: 3,\n      tasks: tasks.filter(i => i.state === 'Done')\n    }\n  });\n  const [selectedUser, setSelectedUser] = useState('');\n  const [mode, setMode] = useState('Issues');\n\n  const onDragEnd = ({\n    destination,\n    source\n  }) => {\n    if (!destination) return;\n\n    if (destination.index === source.index && destination.droppableId === source.droppableId) {\n      return;\n    } // Creating a copy of item before removing it from state\n\n\n    const itemCopy = { ...columns[source.droppableId].tasks[source.index]\n    };\n    itemCopy.state = destination.droppableId;\n    setColumns(prev => {\n      prev = { ...prev\n      }; // Remove from previous items array\n\n      prev[source.droppableId].tasks.splice(source.index, 1); // Adding to new items array location\n\n      prev[destination.droppableId].tasks.splice(destination.index, 0, itemCopy);\n      return prev;\n    });\n  };\n\n  const setVisible = useCallback(assignee => {\n    if (selectedUser) {\n      if (selectedUser === assignee) return true;else return false;\n    }\n\n    if (!selectedUser) return true;\n  }, [selectedUser]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"manage-page monkeys-p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BreadCrumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"monkeys-p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"project-type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Public\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-enviroment-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"env-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"All Enviroment\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"env-button env-active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Dev Enviroment\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-filter-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, actions.map((action, i) => /*#__PURE__*/React.createElement(\"button\", {\n    key: i,\n    onClick: () => setMode(action),\n    className: `project-filter-button ${action === mode ? 'filter-active' : ''} `,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, action))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-action-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-mode-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"Issues\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, userCollection.map(({\n    id,\n    value\n  }, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(UserIcon, {\n    id: id,\n    value: value,\n    onClick: () => setSelectedUser(id),\n    style: selectedUser === id ? 'selected-user' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"li-clear pointer\",\n    onClick: () => setSelectedUser(''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"clear all\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-action-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"Complete Sprint\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"Edit Boards\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"ction-button-special\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"Share\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-tasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, Object.keys(columns).map((i, index) => /*#__PURE__*/React.createElement(ProjectColumn, Object.assign({\n    title: i\n  }, columns[i], {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), columns[i].tasks.map((task, i) => /*#__PURE__*/React.createElement(TaskCard, Object.assign({}, task, {\n    key: i,\n    index: i,\n    visible: setVisible(task.assignee),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }))))))));\n};\n\nconst UserIcon = ({\n  id,\n  value,\n  onClick,\n  style\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'icon-container ' + style,\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: id,\n    type: \"checkbox\",\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FaUserAlt, {\n    className: \"user-icon-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default memo(Project);","map":{"version":3,"sources":["/Users/yorch/development/monkeysCloud/frontend/src/pages/manage/index.js"],"names":["React","memo","useCallback","useState","FaUserAlt","DragDropContext","BreadCrumb","ProjectColumn","TaskCard","tasks","userCollection","id","value","actions","Project","columns","setColumns","color","number","filter","i","state","Working","Done","selectedUser","setSelectedUser","mode","setMode","onDragEnd","destination","source","index","droppableId","itemCopy","prev","splice","setVisible","assignee","map","action","Object","keys","task","UserIcon","onClick","style"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,eAAT,QAAgC,qBAAhC;AAEA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,cAAc,GAAG,CACrB;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CADqB,EAErB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAFqB,EAGrB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAHqB,EAIrB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAJqB,CAAvB;AAOA,MAAMC,OAAO,GAAG,CACd,QADc,EAEd,UAFc,EAGd,QAHc,EAId,QAJc,EAKd,cALc,EAMd,SANc,CAAhB;;AASA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC;AACrC,aAAS;AACPc,MAAAA,KAAK,EAAE,SADA;AAEPC,MAAAA,MAAM,EAAE,EAFD;AAGPP,MAAAA,EAAE,EAAE,CAHG;AAIPF,MAAAA,KAAK,EAAEA,KAAK,CAACU,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAY,OAA9B;AAJA,KAD4B;AAOrCC,IAAAA,OAAO,EAAE;AACPL,MAAAA,KAAK,EAAE,SADA;AAEPC,MAAAA,MAAM,EAAE,EAFD;AAGPP,MAAAA,EAAE,EAAE,CAHG;AAIPF,MAAAA,KAAK,EAAEA,KAAK,CAACU,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAY,SAA9B;AAJA,KAP4B;AAarCE,IAAAA,IAAI,EAAE;AACJN,MAAAA,KAAK,EAAE,SADH;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJP,MAAAA,EAAE,EAAE,CAHA;AAIJF,MAAAA,KAAK,EAAEA,KAAK,CAACU,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAY,MAA9B;AAJH;AAb+B,GAAD,CAAtC;AAoBA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,QAAD,CAAhC;;AAEA,QAAMyB,SAAS,GAAG,CAAC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAD,KAA6B;AAC7C,QAAI,CAACD,WAAL,EAAkB;;AAClB,QACEA,WAAW,CAACE,KAAZ,KAAsBD,MAAM,CAACC,KAA7B,IACAF,WAAW,CAACG,WAAZ,KAA4BF,MAAM,CAACE,WAFrC,EAGE;AACA;AACD,KAP4C,CAS7C;;;AACA,UAAMC,QAAQ,GAAG,EAAE,GAAGlB,OAAO,CAACe,MAAM,CAACE,WAAR,CAAP,CAA4BvB,KAA5B,CAAkCqB,MAAM,CAACC,KAAzC;AAAL,KAAjB;AACAE,IAAAA,QAAQ,CAACZ,KAAT,GAAiBQ,WAAW,CAACG,WAA7B;AACAhB,IAAAA,UAAU,CAACkB,IAAI,IAAI;AACjBA,MAAAA,IAAI,GAAG,EAAE,GAAGA;AAAL,OAAP,CADiB,CAEjB;;AACAA,MAAAA,IAAI,CAACJ,MAAM,CAACE,WAAR,CAAJ,CAAyBvB,KAAzB,CAA+B0B,MAA/B,CAAsCL,MAAM,CAACC,KAA7C,EAAoD,CAApD,EAHiB,CAIjB;;AACAG,MAAAA,IAAI,CAACL,WAAW,CAACG,WAAb,CAAJ,CAA8BvB,KAA9B,CAAoC0B,MAApC,CACEN,WAAW,CAACE,KADd,EAEE,CAFF,EAGEE,QAHF;AAKA,aAAOC,IAAP;AACD,KAXS,CAAV;AAYD,GAxBD;;AA0BA,QAAME,UAAU,GAAGlC,WAAW,CAC5BmC,QAAQ,IAAI;AACV,QAAIb,YAAJ,EAAkB;AAChB,UAAIA,YAAY,KAAKa,QAArB,EAA+B,OAAO,IAAP,CAA/B,KACK,OAAO,KAAP;AACN;;AACD,QAAI,CAACb,YAAL,EAAmB,OAAO,IAAP;AACpB,GAP2B,EAQ5B,CAACA,YAAD,CAR4B,CAA9B;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAFF,eAKE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CALF,CADF,eAWE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,OAAO,CAACyB,GAAR,CAAY,CAACC,MAAD,EAASnB,CAAT,kBACX;AACE,IAAA,GAAG,EAAEA,CADP;AAEE,IAAA,OAAO,EAAE,MAAMO,OAAO,CAACY,MAAD,CAFxB;AAGE,IAAA,SAAS,EAAG,yBACVA,MAAM,KAAKb,IAAX,GAAkB,eAAlB,GAAoC,EACrC,GALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGa,MAPH,CADD,CADH,CAXF,eAwBE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,eAOE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG7B,cAAc,CAAC4B,GAAf,CAAmB,CAAC;AAAE3B,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,EAAgBQ,CAAhB,kBAClB;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,EAAE,EAAET,EADN;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,OAAO,EAAE,MAAMa,eAAe,CAACd,EAAD,CAHhC;AAIE,IAAA,KAAK,EAAEa,YAAY,KAAKb,EAAjB,GAAsB,eAAtB,GAAwC,EAJjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,eAWE;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,OAAO,EAAE,MAAMc,eAAe,CAAC,EAAD,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXF,CADF,CAPF,eA8BE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CA9BF,CAxBF,eA4DE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAEG,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,MAAM,CAACC,IAAP,CAAY1B,OAAZ,EAAqBuB,GAArB,CAAyB,CAAClB,CAAD,EAAIW,KAAJ,kBACxB,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEX;AAAtB,KAA6BL,OAAO,CAACK,CAAD,CAApC;AAAyC,IAAA,GAAG,EAAEW,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGhB,OAAO,CAACK,CAAD,CAAP,CAAWX,KAAX,CAAiB6B,GAAjB,CAAqB,CAACI,IAAD,EAAOtB,CAAP,kBACpB,oBAAC,QAAD,oBACMsB,IADN;AAEE,IAAA,GAAG,EAAEtB,CAFP;AAGE,IAAA,KAAK,EAAEA,CAHT;AAIE,IAAA,OAAO,EAAEgB,UAAU,CAACM,IAAI,CAACL,QAAN,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADH,CADD,CADH,CADF,CA5DF,CADF;AA+ED,CA5ID;;AA8IA,MAAMM,QAAQ,GAAG,CAAC;AAAEhC,EAAAA,EAAF;AAAMC,EAAAA,KAAN;AAAagC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KAAmC;AAClD,sBACE;AAAK,IAAA,SAAS,EAAE,oBAAoBA,KAApC;AAA2C,IAAA,OAAO,EAAED,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,EAAE,EAAEjC,EAAX;AAAe,IAAA,IAAI,EAAC,UAApB;AAA+B,IAAA,KAAK,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAPD;;AASA,eAAeX,IAAI,CAACa,OAAD,CAAnB","sourcesContent":["import React, { memo, useCallback, useState } from 'react';\nimport { FaUserAlt } from 'react-icons/fa';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nimport './style.scss';\nimport BreadCrumb from '../../components/breadcrumb';\nimport ProjectColumn from '../../components/projectcolumn';\nimport TaskCard from '../../components/taskcard';\nimport tasks from './tasks';\n\nconst userCollection = [\n  { id: 1, value: 'Oscar Melendez' },\n  { id: 2, value: 'Eduardo Alvarez' },\n  { id: 3, value: 'Carlos Gutierrez' },\n  { id: 4, value: 'Alejandro Melendez' },\n];\n\nconst actions = [\n  'Issues',\n  'Planning',\n  'Boards',\n  'Labels',\n  'Service Desk',\n  'Reports',\n];\n\nconst Project = () => {\n  const [columns, setColumns] = useState({\n    'To do': {\n      color: '#FF4900',\n      number: 76,\n      id: 1,\n      tasks: tasks.filter(i => i.state === 'To do'),\n    },\n    Working: {\n      color: '#8798ad',\n      number: 69,\n      id: 2,\n      tasks: tasks.filter(i => i.state === 'Working'),\n    },\n    Done: {\n      color: '#0070ff',\n      number: 28,\n      id: 3,\n      tasks: tasks.filter(i => i.state === 'Done'),\n    },\n  });\n  const [selectedUser, setSelectedUser] = useState('');\n  const [mode, setMode] = useState('Issues');\n\n  const onDragEnd = ({ destination, source }) => {\n    if (!destination) return;\n    if (\n      destination.index === source.index &&\n      destination.droppableId === source.droppableId\n    ) {\n      return;\n    }\n\n    // Creating a copy of item before removing it from state\n    const itemCopy = { ...columns[source.droppableId].tasks[source.index] };\n    itemCopy.state = destination.droppableId;\n    setColumns(prev => {\n      prev = { ...prev };\n      // Remove from previous items array\n      prev[source.droppableId].tasks.splice(source.index, 1);\n      // Adding to new items array location\n      prev[destination.droppableId].tasks.splice(\n        destination.index,\n        0,\n        itemCopy\n      );\n      return prev;\n    });\n  };\n\n  const setVisible = useCallback(\n    assignee => {\n      if (selectedUser) {\n        if (selectedUser === assignee) return true;\n        else return false;\n      }\n      if (!selectedUser) return true;\n    },\n    [selectedUser]\n  );\n\n  return (\n    <div className='manage-page monkeys-p-5'>\n      <div className='project-header'>\n        <BreadCrumb />\n        <div className='monkeys-p-1'>\n          <span className='project-type'>Public</span>\n        </div>\n        <div className='project-enviroment-buttons'>\n          <button className='env-button'>All Enviroment</button>\n          <button className='env-button env-active'>Dev Enviroment</button>\n        </div>\n      </div>\n      <div className='project-filter-container'>\n        {actions.map((action, i) => (\n          <button\n            key={i}\n            onClick={() => setMode(action)}\n            className={`project-filter-button ${\n              action === mode ? 'filter-active' : ''\n            } `}\n          >\n            {action}\n          </button>\n        ))}\n      </div>\n      <div className='project-action-container'>\n        <div className='project-mode-name'>\n          <h3>Issues</h3>\n        </div>\n        {/*\n          ---------------------------user fields---------------------------------\n        */}\n        <div className='user-filter'>\n          <ul>\n            {userCollection.map(({ id, value }, i) => (\n              <li key={i}>\n                <UserIcon\n                  id={id}\n                  value={value}\n                  onClick={() => setSelectedUser(id)}\n                  style={selectedUser === id ? 'selected-user' : ''}\n                />\n              </li>\n            ))}\n            <li\n              className='li-clear pointer'\n              onClick={() => setSelectedUser('')}\n            >\n              clear all\n            </li>\n          </ul>\n        </div>\n        {/*\n            ---------------------------end user fields--------------------------------\n        */}\n        <div className='project-action-buttons'>\n          <button>Complete Sprint</button>\n          <button>Edit Boards</button>\n          <button className='ction-button-special'>Share</button>\n        </div>\n      </div>\n      <div className='project-tasks'>\n        <DragDropContext onDragEnd={onDragEnd}>\n          {Object.keys(columns).map((i, index) => (\n            <ProjectColumn title={i} {...columns[i]} key={index}>\n              {columns[i].tasks.map((task, i) => (\n                <TaskCard\n                  {...task}\n                  key={i}\n                  index={i}\n                  visible={setVisible(task.assignee)}\n                />\n              ))}\n            </ProjectColumn>\n          ))}\n        </DragDropContext>\n      </div>\n    </div>\n  );\n};\n\nconst UserIcon = ({ id, value, onClick, style }) => {\n  return (\n    <div className={'icon-container ' + style} onClick={onClick}>\n      <input id={id} type='checkbox' value={value} />\n      <FaUserAlt className='user-icon-center' />\n    </div>\n  );\n};\n\nexport default memo(Project);\n"]},"metadata":{},"sourceType":"module"}