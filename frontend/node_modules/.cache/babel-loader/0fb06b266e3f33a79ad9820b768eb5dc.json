{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\colibricode\\\\monkeysCloud\\\\frontend\\\\src\\\\pages\\\\userDetail\\\\EditableInput.js\";\nimport React, { useEffect, useRef } from 'react';\n\nconst EditableInput = ({\n  name,\n  setEdit,\n  edit\n}) => {\n  const {\n    values,\n    handleChange,\n    errors,\n    touched\n  } = useFormikContext();\n  const ref = useRef(null);\n\n  const stopEditMode = e => e.keyCode === 27 && setEdit(false);\n\n  const handleClick = e => {\n    var _ref$current;\n\n    if ((_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.contains(e.target)) return console.log('dentro');\n    setEdit(false);\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"input\", {\n    value: value,\n    ref: ref,\n    onKeyDown: stopEditMode,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default EditableInput;","map":{"version":3,"sources":["C:/Users/PC/Desktop/colibricode/monkeysCloud/frontend/src/pages/userDetail/EditableInput.js"],"names":["React","useEffect","useRef","EditableInput","name","setEdit","edit","values","handleChange","errors","touched","useFormikContext","ref","stopEditMode","e","keyCode","handleClick","current","contains","target","console","log","document","addEventListener","removeEventListener","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAA6B;AACjD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,MAAxB;AAAgCC,IAAAA;AAAhC,MAA4CC,gBAAgB,EAAlE;AACA,QAAMC,GAAG,GAAGV,MAAM,CAAC,IAAD,CAAlB;;AACA,QAAMW,YAAY,GAAGC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAc,EAAd,IAAoBV,OAAO,CAAC,KAAD,CAArD;;AAEA,QAAMW,WAAW,GAAGF,CAAC,IAAI;AAAA;;AACvB,wBAAIF,GAAG,CAACK,OAAR,iDAAI,aAAaC,QAAb,CAAsBJ,CAAC,CAACK,MAAxB,CAAJ,EAAqC,OAAOC,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAP;AACrChB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAHD;;AAKAJ,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCP,WAAvC;AACA,WAAO,MAAM;AACXM,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CR,WAA1C;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAMA,sBAAO;AAAO,IAAA,KAAK,EAAES,KAAd;AAAqB,IAAA,GAAG,EAAEb,GAA1B;AAA+B,IAAA,SAAS,EAAEC,YAA1C;AAAwD,IAAA,SAAS,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAjBD;;AAmBA,eAAeV,aAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst EditableInput = ({ name, setEdit, edit }) => {\r\n  const { values, handleChange, errors, touched } = useFormikContext();\r\n  const ref = useRef(null);\r\n  const stopEditMode = e => e.keyCode === 27 && setEdit(false);\r\n\r\n  const handleClick = e => {\r\n    if (ref.current?.contains(e.target)) return console.log('dentro');\r\n    setEdit(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClick);\r\n    };\r\n  }, []);\r\n  return <input value={value} ref={ref} onKeyDown={stopEditMode} autoFocus />;\r\n};\r\n\r\nexport default EditableInput;\r\n"]},"metadata":{},"sourceType":"module"}