{"ast":null,"code":"import Axios from 'axios';\nconst axios = Axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\naxios.interceptors.response.use(null, error => {\n  const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\n  return Promise.reject(1 + error);\n});\n\nconst setJwt = token => {\n  if (token) axios.defaults.headers['Authorization'] = token;else delete axios.defaults.headers['Authorization'];\n};\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};","map":{"version":3,"sources":["C:/Users/PC/Desktop/colibricode/monkeysCloud/frontend/src/api/axios.js"],"names":["Axios","axios","create","baseURL","process","env","REACT_APP_API_URL","interceptors","response","use","error","expectedError","status","Promise","reject","setJwt","token","defaults","headers","get","post","put","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADI,CAAb,CAAd;AAIAL,KAAK,CAACM,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,IAAhC,EAAsCC,KAAK,IAAI;AAC7C,QAAMC,aAAa,GACjBD,KAAK,CAACF,QAAN,IACAE,KAAK,CAACF,QAAN,CAAeI,MAAf,IAAyB,GADzB,IAEAF,KAAK,CAACF,QAAN,CAAeI,MAAf,GAAwB,GAH1B;AAKA,SAAOC,OAAO,CAACC,MAAR,CAAe,IAAIJ,KAAnB,CAAP;AACD,CAPD;;AASA,MAAMK,MAAM,GAAGC,KAAK,IAAI;AACtB,MAAIA,KAAJ,EAAWf,KAAK,CAACgB,QAAN,CAAeC,OAAf,CAAuB,eAAvB,IAA0CF,KAA1C,CAAX,KACK,OAAOf,KAAK,CAACgB,QAAN,CAAeC,OAAf,CAAuB,eAAvB,CAAP;AACN,CAHD;;AAKA,eAAe;AACbC,EAAAA,GAAG,EAAElB,KAAK,CAACkB,GADE;AAEbC,EAAAA,IAAI,EAAEnB,KAAK,CAACmB,IAFC;AAGbC,EAAAA,GAAG,EAAEpB,KAAK,CAACoB,GAHE;AAIbC,EAAAA,MAAM,EAAErB,KAAK,CAACqB,MAJD;AAKbP,EAAAA;AALa,CAAf","sourcesContent":["import Axios from 'axios';\r\n\r\nconst axios = Axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  return Promise.reject(1 + error);\r\n});\r\n\r\nconst setJwt = token => {\r\n  if (token) axios.defaults.headers['Authorization'] = token;\r\n  else delete axios.defaults.headers['Authorization'];\r\n};\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt,\r\n};"]},"metadata":{},"sourceType":"module"}