{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\colibricode\\\\monkeysCloud\\\\frontend\\\\src\\\\pages\\\\userDetail\\\\editableInput\\\\index.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useFormikContext } from 'formik';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport './style.scss';\n\nconst EditableInput = ({\n  name,\n  label\n}) => {\n  const [edit, setEdit] = useState(false);\n  const {\n    values,\n    handleChange\n  } = useFormikContext();\n  const ref = useRef(null);\n\n  const stopEditMode = e => e.keyCode === 27 && setEdit(false);\n\n  const handleClick = e => {\n    var _ref$current;\n\n    if ((_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.contains(e.target)) return console.log('dentro');\n    setEdit(false);\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editable-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, label || name), !edit ? /*#__PURE__*/React.createElement(\"h5\", {\n    onClick: () => setEdit(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, values[name] || `Your ${label}`) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editable-input__form\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    value: values[name],\n    onChange: handleChange,\n    onKeyDown: stopEditMode,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editable-input__options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AiOutlineClose, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default EditableInput;","map":{"version":3,"sources":["C:/Users/PC/Desktop/colibricode/monkeysCloud/frontend/src/pages/userDetail/editableInput/index.js"],"names":["React","useEffect","useRef","useState","useFormikContext","AiOutlineClose","EditableInput","name","label","edit","setEdit","values","handleChange","ref","stopEditMode","e","keyCode","handleClick","current","contains","target","console","log","document","addEventListener","removeEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,gBAAT,QAAiC,QAAjC;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,OAAO,cAAP;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AACzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM;AAAEQ,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA2BR,gBAAgB,EAAjD;AACA,QAAMS,GAAG,GAAGX,MAAM,CAAC,IAAD,CAAlB;;AACA,QAAMY,YAAY,GAAGC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAc,EAAd,IAAoBN,OAAO,CAAC,KAAD,CAArD;;AAEA,QAAMO,WAAW,GAAGF,CAAC,IAAI;AAAA;;AACvB,wBAAIF,GAAG,CAACK,OAAR,iDAAI,aAAaC,QAAb,CAAsBJ,CAAC,CAACK,MAAxB,CAAJ,EAAqC,OAAOC,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAP;AACrCZ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAHD;;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCP,WAAvC;AACA,WAAO,MAAM;AACXM,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CR,WAA1C;AACD,KAFD,CAFc,CAKd;AACD,GANQ,EAMN,EANM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,KAAK,IAAID,IAAd,CADF,EAEG,CAACE,IAAD,gBACC;AAAI,IAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,IAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCC,MAAM,CAACJ,IAAD,CAAN,IAAiB,QAAOC,KAAM,EAAjE,CADD,gBAGC;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAsC,IAAA,GAAG,EAAEK,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAEN,IADR;AAEE,IAAA,KAAK,EAAEI,MAAM,CAACJ,IAAD,CAFf;AAGE,IAAA,QAAQ,EAAEK,YAHZ;AAIE,IAAA,SAAS,EAAEE,YAJb;AAKE,IAAA,SAAS,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CALJ,CADF;AAqBD,CAvCD;;AAyCA,eAAeR,aAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useFormikContext } from 'formik';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\nimport './style.scss';\r\n\r\nconst EditableInput = ({ name, label }) => {\r\n  const [edit, setEdit] = useState(false);\r\n  const { values, handleChange } = useFormikContext();\r\n  const ref = useRef(null);\r\n  const stopEditMode = e => e.keyCode === 27 && setEdit(false);\r\n\r\n  const handleClick = e => {\r\n    if (ref.current?.contains(e.target)) return console.log('dentro');\r\n    setEdit(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClick);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClick);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <div className='editable-input'>\r\n      <h6>{label || name}</h6>\r\n      {!edit ? (\r\n        <h5 onClick={() => setEdit(true)}>{values[name] || `Your ${label}`}</h5>\r\n      ) : (\r\n        <div className='editable-input__form' ref={ref}>\r\n          <input\r\n            name={name}\r\n            value={values[name]}\r\n            onChange={handleChange}\r\n            onKeyDown={stopEditMode}\r\n            autoFocus\r\n          />\r\n          <div className='editable-input__options'>\r\n            <AiOutlineClose />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditableInput;\r\n"]},"metadata":{},"sourceType":"module"}